##   sprintars2nc converts SPRINTARS unformatted FORTRAN data to NetCDF 
##   Copyright (C) 2016 Johannes Muelmenstaedt 
##
##   This program is free software: you can redistribute it and/or modify 
##   it under the terms of the GNU General Public License as published by 
##   the Free Software Foundation, either version 3 of the License, or 
##   (at your option) any later version. 
##
##   This program is distributed in the hope that it will be useful, 
##   but WITHOUT ANY WARRANTY; without even the implied warranty of 
##   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
##   GNU General Public License for more details. 
##
##   You should have received a copy of the GNU General Public License 
##   along with this program.  If not, see <http://www.gnu.org/licenses/>. 
##
##   Bug reports and feature requests are welcome.  Contact me at
##   johannes.muelmenstaedt@uni-leipzig.de */

# NetCDF

# if nc-config does not exist in your NetCDF installation, set
# this by hand, e.g.:
# NCFLAGS = -I/opt/netcdf/include
# NCLIBS = -L/opt/netcdf/lib -lnetcdf

# if nc-config does exist, these flags can be determined automatically
NCFLAGS = $(shell nc-config --cflags)
NCLIBS = $(shell nc-config --libs)

# C compiler 
CC = gcc
CFLAGS = -g -O0 -std=c99 -posix $(NCFLAGS)

# Fortran compiler
#
# Note:
# * must support the C interoperability part of the FORTRAN 2003 standard
# * must also support the CONVERT specifier in OPEN if reading
#   (big-endian) SPRINTARS data on little-endian architecture (e.g., Intel)
#
# gfortran >= 4.8 is a safe choice in these respects
F90 = gfortran
F90FLAGS = -g -O0

# linker
LD = gcc
LDFLAGS =
LIBS = -lgfortran $(NCLIBS)

CSOURCES = main.c opts.c diag.c convert.c nc.c dims.c

# compile all C files plus read_gtool.f90
OBJECTS = $(CSOURCES:.c=.o) read_gtool.o

BIN = sprintars2nc

all:	$(BIN)

$(BIN):	$(OBJECTS)
	$(LD) $(LDFLAGS) -o $@ $(OBJECTS) $(LIBS)

# we only have one FORTRAN source file; explicit compilation rule:
read_gtool.o:	read_gtool.f90
	$(F90) $(F90FLAGS) $< -c

# implicit rules for C source files and autogenerated dependencies
%.d:	%.c
	@ set -e ; $(CC) -M $(CFLAGS) $< \
                       | sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
                     [ -s $@ ] || rm -f $@
%.o: 	%.c 
	$(CC) $(CFLAGS) $< -c

-include $(CSOURCES:.c=.d)

.PHONY: clean
clean:
	rm *.o *.d $(BIN)
